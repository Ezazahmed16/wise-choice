// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model brands {
  id         Int        @id @default(autoincrement())
  brandName  String     @unique @db.VarChar(50)
  brandImage String     @db.VarChar(350)
  createdAt  DateTime   @default(now()) @db.Timestamp(0)
  updatedAt  DateTime   @default(now()) @updatedAt @db.Timestamp(0)
  products   products[]
}

model categories {
  id           Int        @id @default(autoincrement())
  categoryName String     @unique @db.VarChar(50)
  categoryImg  String     @db.VarChar(350)
  createdAt    DateTime   @default(now()) @db.Timestamp(0)
  updatedAt    DateTime   @default(now()) @updatedAt @db.Timestamp(0)
  products     products[]
}

model products {
  id             Int             @id @default(autoincrement())
  title          String          @db.VarChar(190)
  short_des      String          @db.VarChar(500)
  price          Float
  discount       Boolean
  discount_price Float
  image          String          @db.VarChar(350)
  stock          Boolean
  star           Float
  remark         products_remark
  brand_id       Int?
  category_id    Int?
  createdAt      DateTime        @default(now()) @db.Timestamp(0)
  updatedAt      DateTime        @default(now()) @updatedAt @db.Timestamp(0)

  product_details  product_details[]
  product_sliders  product_sliders[]
  product_wishes   product_wishes[]
  product_carts    product_carts[]
  product_reviews  product_reviews[]
  invoice_products invoice_products[]

  categories categories? @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  brands     brands?     @relation(fields: [brand_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model product_details {
  id         Int       @id @default(autoincrement())
  img1       String    @db.VarChar(200)
  img2       String    @db.VarChar(200)
  img3       String    @db.VarChar(200)
  img4       String    @db.VarChar(200)
  des        String    @db.LongText
  color      String    @db.VarChar(100)
  size       String    @db.VarChar(100)
  createdAt  DateTime  @default(now()) @db.Timestamp(0)
  updatedAt  DateTime  @default(now()) @updatedAt @db.Timestamp(0)
  products   products? @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  product_id Int?
}

model product_sliders {
  id         Int       @id @default(autoincrement())
  title      String    @db.VarChar(100)
  short_des  String    @db.VarChar(500)
  price      String    @db.VarChar(100)
  image      String    @db.VarChar(300)
  createdAt  DateTime  @default(now()) @db.Timestamp(0)
  updatedAt  DateTime  @default(now()) @updatedAt @db.Timestamp(0)
  products   products? @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  product_id Int?
}

model users {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  otp               String              @db.VarChar(10)
  createdAt         DateTime            @default(now()) @db.Timestamp(0)
  updatedAt         DateTime            @default(now()) @updatedAt @db.Timestamp(0)
  product_wishes    product_wishes[]
  customer_profiles customer_profiles[]
  product_carts     product_carts[]
  invoices          invoices[]
  invoice_products  invoice_products[]
}

model customer_profiles {
  id            Int      @id @default(autoincrement())
  cus_name      String   @db.VarChar(100)
  cus_add       String   @db.VarChar(100)
  cus_city      String   @db.VarChar(100)
  cus_state     String   @db.VarChar(100)
  cus_postcode  String   @db.VarChar(100)
  cus_country   String   @db.VarChar(100)
  cus_phone     String   @db.VarChar(100)
  cus_fax       String   @db.VarChar(100)
  ship_name     String   @db.VarChar(100)
  ship_add      String   @db.VarChar(100)
  ship_city     String   @db.VarChar(100)
  ship_state    String   @db.VarChar(100)
  ship_postcode String   @db.VarChar(100)
  ship_country  String   @db.VarChar(100)
  ship_phone    String   @db.VarChar(100)
  createdAt     DateTime @default(now()) @db.Timestamp(0)
  updatedAt     DateTime @default(now()) @updatedAt @db.Timestamp(0)
  users         users?   @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  user_id       Int?

  product_reviews product_reviews[]
}

model product_carts {
  id         Int       @id @default(autoincrement())
  color      String    @db.VarChar(200)
  size       String    @db.VarChar(200)
  qty        Float
  price      Float
  createdAt  DateTime  @default(now()) @db.Timestamp(0)
  updatedAt  DateTime  @default(now()) @updatedAt @db.Timestamp(0)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  user_id    Int?
  products   products? @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  product_id Int?
}

model product_wishes {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now()) @db.Timestamp(0)
  updatedAt  DateTime  @default(now()) @updatedAt @db.Timestamp(0)
  users      users?    @relation(fields: [user_id], references: [id])
  user_id    Int?
  products   products? @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  product_id Int?
}

model product_reviews {
  id          Int    @id @default(autoincrement())
  description String @db.VarChar(500)
  rating      String @db.VarChar(10)

  createdAt         DateTime           @default(now()) @db.Timestamp(0)
  updatedAt         DateTime           @default(now()) @updatedAt @db.Timestamp(0)
  customer_profiles customer_profiles? @relation(fields: [customer_id], references: [id])
  customer_id       Int?
  products          products?          @relation(fields: [product_id], references: [id])
  product_id        Int?
}

model invoices {
  id               Int                      @id @default(autoincrement())
  total            Float
  vat              Float
  payable          Float
  cus_details      String                   @db.VarChar(500)
  ship_details     String                   @db.VarChar(500)
  tran_id          String                   @db.VarChar(100)
  val_id           String                   @default("0") @db.VarChar(100)
  delivery_status  invoices_delivery_status
  payment_status   String                   @db.VarChar(255)
  user_id          Int
  createdAt        DateTime                 @default(now()) @db.Timestamp(0)
  updatedAt        DateTime                 @default(now()) @updatedAt @db.Timestamp(0)
  invoice_products invoice_products[]
  users            users                    @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model invoice_products {
  id         Int    @id @default(autoincrement())
  invoice_id Int
  product_id Int
  user_id    Int
  qty        Float
  sale_price Float
  color      String @db.VarChar(50)
  size       String @db.VarChar(50)

  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)

  invoices invoices @relation(fields: [invoice_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  products products @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  users    users    @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model policies {
  id   Int           @id @default(autoincrement())
  type policies_type
  des  String        @db.LongText
}

model features {
  id          Int    @id @default(autoincrement())
  name        String
  img         String @db.VarChar(300)
  description String @db.LongText
}

model sslcommerz_accounts {
  id           Int      @id @default(autoincrement())
  store_id     String   @db.VarChar(255)
  store_passwd String   @db.VarChar(255)
  currency     String   @db.VarChar(255)
  success_url  String   @db.VarChar(255)
  fail_url     String   @db.VarChar(255)
  cancel_url   String   @db.VarChar(255)
  ipn_url      String   @db.VarChar(255)
  init_url     String   @db.VarChar(255)
  createdAt    DateTime @default(now()) @db.Timestamp(0)
  updatedAt    DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

enum products_remark {
  popular
  new
  top
  special
  trending
  regular
}

enum invoices_delivery_status {
  Pending
  Processing
  Completed
}

enum policies_type {
  about
  refund
  terms
  contact
  complain
}
